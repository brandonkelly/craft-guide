var e=Object.defineProperty,t=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,i=(t,a,l)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:l}):t[a]=l,n=(e,n)=>{for(var d in n||(n={}))a.call(n,d)&&i(e,d,n[d]);if(t)for(var d of t(n))l.call(n,d)&&i(e,d,n[d]);return e};import{d,r,e as o,x as s,l as u,c as p,a as c,b as g,E as m,o as v,L as h}from"./globals.d29db01a.js";import{_ as y,a as S}from"./SvgSettings.a3c8f422.js";var f=d({name:"PlacementInlineEditor",components:{CraftFieldSelect:y},props:{placementId:String,placementInlineEditor:{type:String,required:!0}},setup:e=>{const t=r({guides:u,guideValue:null,placement:null,placementSaved:!1});return t.placement={access:"all",group:"uiElement",groupId:e.placementInlineEditor,guideId:null,id:parseFloat(e.placementId)||null,portalMethod:"append",selector:null,theme:"default",uri:null},n({},o(t))},computed:{guideFieldOptions(){const e=[{label:"Select One",value:"__none__"}];return this.guides.forEach((t=>{e.push({label:t.title,value:t.slug})})),e}},methods:{async deletePlacement(){var e,t;(null==(e=this.placement)?void 0:e.id)&&await(null==(t=window.Craft)?void 0:t.postActionRequest("guide/placement/delete-placement",{data:JSON.stringify(this.placement)},((e,t,a)=>{var l,i,n,d;s("Deleting placement",e,t,a),this.placementSaved=!0,"success"===e.status?null==(i=null==(l=window.Craft)?void 0:l.cp)||i.displayNotice("Guide removed"):null==(d=null==(n=window.Craft)?void 0:n.cp)||d.displayError(e.data.error)})))},onGroupChanged(e){this.guideValue=e},onSaveClicked(){"__none__"===this.guideValue?this.deletePlacement():this.savePlacement()},async savePlacement(){var e;const t=this.guides.find((e=>e.slug===this.guideValue));t&&(this.placement.guideId=t.id),await(null==(e=window.Craft)?void 0:e.postActionRequest("guide/placement/save-placement",{data:JSON.stringify(this.placement)},((e,t,a)=>{var l,i,n,d;s("Saving placement",e,t,a),this.placementSaved=!0,"success"===e.status?null==(i=null==(l=window.Craft)?void 0:l.cp)||i.displayNotice("Guide UI Element updated"):null==(d=null==(n=window.Craft)?void 0:n.cp)||d.displayError(e.data.error)})))}},mounted(){this.$refs.guideField.setFieldValue(this.guideFieldOptions[0].value),s("PlacementInlineEditor loaded")}});const C={key:0},b={key:0},E={key:0},I={key:1},w={key:1},O={key:2},_=c("p",null,"No guides have been created yet. Create a guide and then return here to select it for this UI Element.",-1);f.render=function(e,t,a,l,i,n){const d=m("CraftFieldSelect");return e.placementInlineEditor?(v(),p("div",C,[e.placementSaved?(v(),p("div",b,["__none__"===e.guideValue?(v(),p("p",E,"Guide removed. Please reload this page and select another guide.")):(v(),p("p",I,"Guide added. Please reload this page to see the guide displayed here."))])):e.guides.length?(v(),p("div",w,[c(d,{ref:"guideField",instructions:"Select a guide to be displayed here.",label:"Guide",name:"guide",options:e.guideFieldOptions,onValueChanged:e.onGroupChanged},null,8,["options","onValueChanged"]),c("button",{class:"btn submit",type:"button",onClick:t[1]||(t[1]=(...t)=>e.onSaveClicked&&e.onSaveClicked(...t))},"Save")])):(v(),p("div",O,[_]))])):g("",!0)};var N=d({name:"GuideDisplay",delimiters:["${","}"],components:{PlacementInlineEditor:f,SvgSettings:S},props:{enableInlineEditor:Boolean,guideDisplay:{type:String,required:!0},guideNavData:String,startInInlineEditor:{type:Boolean,required:!1},teleportContainerClass:String,teleportMethod:String,teleportSelector:String},setup:e=>{const t=r({currentGuide:"",guideNav:e.guideNavData?JSON.parse(e.guideNavData):[],showInlineEditor:!1});return n({},o(t))},computed:{teleportTarget(){return this.teleportSelector?`#teleport-${this.guideDisplay}`:null}},methods:{},created(){var e;(null==(e=this.guideNav)?void 0:e.length)&&(this.currentGuide=this.guideNav[0].slug),this.showInlineEditor=this.startInInlineEditor},mounted(){s("GuideDisplay loaded")}});const P=document.querySelectorAll("[data-guide-display]");P&&P.forEach((e=>{var t,a,l,i;if(null==(t=e.dataset)?void 0:t.guideDisplay){if(null==(a=e.dataset)?void 0:a.teleportSelector){const t=document.querySelector(e.dataset.teleportSelector);if(t){const a=document.createElement("div");a.id=`teleport-${e.dataset.guideDisplay}`,(null==(l=e.dataset)?void 0:l.teleportContainerClass)&&a.setAttribute("class",e.dataset.teleportContainerClass),"append"===(null==(i=e.dataset)?void 0:i.teleportMethod)?t.appendChild(a):t.insertBefore(a,t.firstChild)}}N.template=`#${e.dataset.guideDisplay}`,h(n({},N),e.dataset).mount(e)}}));
